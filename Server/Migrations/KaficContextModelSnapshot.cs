// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace KaficServer.Migrations
{
    [DbContext(typeof(KaficContext))]
    partial class KaficContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Kafic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DimenzijaX")
                        .HasColumnType("int");

                    b.Property<int>("DimenzijaY")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Kafici");
                });

            modelBuilder.Entity("Models.KategorijaProizvoda", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Kategorije");
                });

            modelBuilder.Entity("Models.Konobar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("KaficID")
                        .HasColumnType("int");

                    b.Property<string>("Nadimak")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Plata")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("KaficID");

                    b.ToTable("Konobari");
                });

            modelBuilder.Entity("Models.Narudzbina", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DodatnoUputstvo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Izvrsena")
                        .HasColumnType("bit");

                    b.Property<int?>("KonobarID")
                        .HasColumnType("int");

                    b.Property<int>("Napojnica")
                        .HasColumnType("int");

                    b.Property<int?>("StoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("KonobarID");

                    b.HasIndex("StoID");

                    b.ToTable("Narudzbine");
                });

            modelBuilder.Entity("Models.Proizvod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<string>("Jedinica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KategorijaID")
                        .HasColumnType("int");

                    b.Property<float>("Kolicina")
                        .HasColumnType("real");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opis")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ID");

                    b.HasIndex("KategorijaID");

                    b.ToTable("Proizvodi");
                });

            modelBuilder.Entity("Models.SpojNarudzbinaProizvod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NarudzbinaID")
                        .HasColumnType("int");

                    b.Property<int>("ProizvodID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("NarudzbinaID");

                    b.HasIndex("ProizvodID");

                    b.ToTable("NarudzbineProizvodi");
                });

            modelBuilder.Entity("Models.Sto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojOsoba")
                        .HasColumnType("int");

                    b.Property<bool>("DozvoljenoPusenje")
                        .HasColumnType("bit");

                    b.Property<int?>("KaficID")
                        .HasColumnType("int");

                    b.Property<int>("PozicijaX")
                        .HasColumnType("int");

                    b.Property<int>("PozicijaY")
                        .HasColumnType("int");

                    b.Property<bool>("Slobodan")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("KaficID");

                    b.ToTable("Stolovi");
                });

            modelBuilder.Entity("Models.Konobar", b =>
                {
                    b.HasOne("Models.Kafic", "Kafic")
                        .WithMany()
                        .HasForeignKey("KaficID");

                    b.Navigation("Kafic");
                });

            modelBuilder.Entity("Models.Narudzbina", b =>
                {
                    b.HasOne("Models.Konobar", "Konobar")
                        .WithMany("NarudzbineKonobar")
                        .HasForeignKey("KonobarID");

                    b.HasOne("Models.Sto", "Sto")
                        .WithMany("NarudzbineSto")
                        .HasForeignKey("StoID");

                    b.Navigation("Konobar");

                    b.Navigation("Sto");
                });

            modelBuilder.Entity("Models.Proizvod", b =>
                {
                    b.HasOne("Models.KategorijaProizvoda", "Kategorija")
                        .WithMany("ProizvodiKategorija")
                        .HasForeignKey("KategorijaID");

                    b.Navigation("Kategorija");
                });

            modelBuilder.Entity("Models.SpojNarudzbinaProizvod", b =>
                {
                    b.HasOne("Models.Narudzbina", "Narudzbina")
                        .WithMany("NarudzbinaProizvod")
                        .HasForeignKey("NarudzbinaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Proizvod", "Proizvod")
                        .WithMany("NarudzbinaProizvod")
                        .HasForeignKey("ProizvodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Narudzbina");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("Models.Sto", b =>
                {
                    b.HasOne("Models.Kafic", "Kafic")
                        .WithMany()
                        .HasForeignKey("KaficID");

                    b.Navigation("Kafic");
                });

            modelBuilder.Entity("Models.KategorijaProizvoda", b =>
                {
                    b.Navigation("ProizvodiKategorija");
                });

            modelBuilder.Entity("Models.Konobar", b =>
                {
                    b.Navigation("NarudzbineKonobar");
                });

            modelBuilder.Entity("Models.Narudzbina", b =>
                {
                    b.Navigation("NarudzbinaProizvod");
                });

            modelBuilder.Entity("Models.Proizvod", b =>
                {
                    b.Navigation("NarudzbinaProizvod");
                });

            modelBuilder.Entity("Models.Sto", b =>
                {
                    b.Navigation("NarudzbineSto");
                });
#pragma warning restore 612, 618
        }
    }
}
